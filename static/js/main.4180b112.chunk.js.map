{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","onSubmit","preventDefault","props","onAddTask","this","type","onChange","Component","contacts","onVisible","onRemove","component","map","visibleTask","key","id","classNames","timeout","className","onClick","App","filter","notify","addTask","nameResult","numberResult","info","uuidv4","find","contact","toLowerCase","includes","setTimeout","prevState","removeTask","taskId","persistedTasks","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleTasks","getVisibleTasks","in","unmountOnExit","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4180b112.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddTask(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label>\r\n            Name\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            ></input>\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Number\r\n            <br></br>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n              name=\"number\"\r\n            ></input>\r\n          </label>\r\n          <br></br>\r\n          <button type=\"submit\">Add contact</button>\r\n          <br></br>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './ContactList.css';\r\n\r\nconst contacts = ({ onChange, onVisible, onRemove }) => (\r\n  <div>\r\n    <label>\r\n      find contacts by name\r\n      <input onChange={onChange} name=\"filter\"></input>\r\n    </label>\r\n    <TransitionGroup component=\"ul\">\r\n      {onVisible.map(visibleTask => (\r\n        <CSSTransition key={visibleTask.id} classNames=\"list\" timeout={250}>\r\n          <li className=\"name-list\">\r\n            {visibleTask.name}:{visibleTask.number}\r\n            <button\r\n              type=\"button\"\r\n              className=\"close-button\"\r\n              onClick={() => onRemove(visibleTask.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nexport default contacts;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    notify: false,\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem('contacts');\n    if (persistedTasks) {\n      this.setState({\n        contacts: JSON.parse(persistedTasks),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getVisibleTasks() {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  addTask = (nameResult, numberResult) => {\n    const { contacts } = this.state;\n    const info = {\n      id: uuidv4(),\n      name: nameResult,\n      number: numberResult,\n    };\n\n    if (\n      contacts.find(contact =>\n        contact.name.toLowerCase().includes(nameResult.toLowerCase()),\n      )\n    ) {\n      this.setState({ notify: true });\n\n      setTimeout(() => {\n        this.setState({ notify: false });\n      }, 3500);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, info],\n        };\n      });\n    }\n  };\n\n  removeTask = taskId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== taskId),\n      };\n    });\n  };\n\n  render() {\n    // const { contacts } = this.state;\n    const visibleTasks = this.getVisibleTasks();\n\n    return (\n      <div>\n        <CSSTransition\n          in={this.state.notify}\n          timeout={250}\n          unmountOnExit\n          classNames=\"alert-title\"\n        >\n          <div className=\"alert\">\n            <h2 className=\"error-notify\">\n              This user name already in your contact list\n            </h2>\n          </div>\n        </CSSTransition>\n\n        <div className=\"phonebook\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames=\"list\"\n            timeout={500}\n          >\n            <h2 className=\"phonebook-head\">Phonebook</h2>\n          </CSSTransition>\n        </div>\n\n        <ContactForm onAddTask={this.addTask} />\n\n        <h2>Contacts</h2>\n        <CSSTransition\n          in={this.state.contacts.length > 0}\n          classNames=\"list\"\n          timeout={2500}\n          unmountOnExit\n        >\n          <ContactsList\n            onChange={this.handleChange}\n            onVisible={visibleTasks}\n            onRemove={this.removeTask}\n          />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}